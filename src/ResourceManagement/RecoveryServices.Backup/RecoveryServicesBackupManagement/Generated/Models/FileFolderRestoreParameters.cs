// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using Microsoft.Azure.Management.RecoveryServices.Backup.Models;

namespace Microsoft.Azure.Management.RecoveryServices.Backup.Models
{
    /// <summary>
    /// Common parameters to be used with the file folder restore APIs.
    /// </summary>
    public partial class FileFolderRestoreParameters
    {
        private string _containerName;
        
        /// <summary>
        /// Optional. Name of the container where the protected item belongs to.
        /// </summary>
        public string ContainerName
        {
            get { return this._containerName; }
            set { this._containerName = value; }
        }
        
        private CustomRequestHeaders _customRequestHeaders;
        
        /// <summary>
        /// Optional. Request header parameters.
        /// </summary>
        public CustomRequestHeaders CustomRequestHeaders
        {
            get { return this._customRequestHeaders; }
            set { this._customRequestHeaders = value; }
        }
        
        private string _fabricName;
        
        /// <summary>
        /// Optional. Fabric name of the protected item.
        /// </summary>
        public string FabricName
        {
            get { return this._fabricName; }
            set { this._fabricName = value; }
        }
        
        private string _protectedItemName;
        
        /// <summary>
        /// Optional. Name of the protected item whose files / folders are to
        /// be restored.
        /// </summary>
        public string ProtectedItemName
        {
            get { return this._protectedItemName; }
            set { this._protectedItemName = value; }
        }
        
        private string _recoveryPointId;
        
        /// <summary>
        /// Optional. ID of the recovery point whose files / folders are to be
        /// restored.
        /// </summary>
        public string RecoveryPointId
        {
            get { return this._recoveryPointId; }
            set { this._recoveryPointId = value; }
        }
        
        private string _resourceGroupName;
        
        /// <summary>
        /// Required. Resource group name of your recovery services vault.
        /// </summary>
        public string ResourceGroupName
        {
            get { return this._resourceGroupName; }
            set { this._resourceGroupName = value; }
        }
        
        private string _resourceName;
        
        /// <summary>
        /// Required. Name of your recovery services vault.
        /// </summary>
        public string ResourceName
        {
            get { return this._resourceName; }
            set { this._resourceName = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the FileFolderRestoreParameters class.
        /// </summary>
        public FileFolderRestoreParameters()
        {
        }
        
        /// <summary>
        /// Initializes a new instance of the FileFolderRestoreParameters class
        /// with required arguments.
        /// </summary>
        public FileFolderRestoreParameters(string resourceGroupName, string resourceName)
            : this()
        {
            if (resourceGroupName == null)
            {
                throw new ArgumentNullException("resourceGroupName");
            }
            if (resourceName == null)
            {
                throw new ArgumentNullException("resourceName");
            }
            this.ResourceGroupName = resourceGroupName;
            this.ResourceName = resourceName;
        }
    }
}
