// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using Hyak.Common;
using Microsoft.Azure.Management.RecoveryServices.Backup.Models;

namespace Microsoft.Azure.Management.RecoveryServices.Backup.Models
{
    /// <summary>
    /// The definition of a NotificationConfiguration.
    /// </summary>
    public partial class NotificationConfiguration
    {
        private IList<string> _additionalRecipients;
        
        /// <summary>
        /// Optional. Recipients list to send notification.
        /// </summary>
        public IList<string> AdditionalRecipients
        {
            get { return this._additionalRecipients; }
            set { this._additionalRecipients = value; }
        }
        
        private bool _areNotificationsEnabled;
        
        /// <summary>
        /// Optional. Notification enabled.
        /// </summary>
        public bool AreNotificationsEnabled
        {
            get { return this._areNotificationsEnabled; }
            set { this._areNotificationsEnabled = value; }
        }
        
        private NotificationFrequencyDetails _frequencyDetails;
        
        /// <summary>
        /// Optional. Notification frequency details.
        /// </summary>
        public NotificationFrequencyDetails FrequencyDetails
        {
            get { return this._frequencyDetails; }
            set { this._frequencyDetails = value; }
        }
        
        private IList<AlertSeverity> _severitiesToNotifyFor;
        
        /// <summary>
        /// Optional. Alert Severity to notify for.
        /// </summary>
        public IList<AlertSeverity> SeveritiesToNotifyFor
        {
            get { return this._severitiesToNotifyFor; }
            set { this._severitiesToNotifyFor = value; }
        }
        
        private IList<SourceType> _sourcesToNotifyFor;
        
        /// <summary>
        /// Optional. SourceType to notify for.
        /// </summary>
        public IList<SourceType> SourcesToNotifyFor
        {
            get { return this._sourcesToNotifyFor; }
            set { this._sourcesToNotifyFor = value; }
        }
        
        private IList<AlertType> _typesToNotifyFor;
        
        /// <summary>
        /// Optional. Alert Types/IDs to notify for.
        /// </summary>
        public IList<AlertType> TypesToNotifyFor
        {
            get { return this._typesToNotifyFor; }
            set { this._typesToNotifyFor = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the NotificationConfiguration class.
        /// </summary>
        public NotificationConfiguration()
        {
            this.AdditionalRecipients = new LazyList<string>();
            this.SeveritiesToNotifyFor = new LazyList<AlertSeverity>();
            this.SourcesToNotifyFor = new LazyList<SourceType>();
            this.TypesToNotifyFor = new LazyList<AlertType>();
        }
    }
}
