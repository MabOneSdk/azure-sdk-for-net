// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.Models
{
    using Azure;
    using Management;
    using RecoveryServices;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Certificate details representing the Vault credentials for AAD.
    /// </summary>
    [Newtonsoft.Json.JsonObject("AzureActiveDirectory")]
    public partial class ResourceCertificateAndAADDetails : ResourceCertificateDetails
    {
        /// <summary>
        /// Initializes a new instance of the ResourceCertificateAndAADDetails
        /// class.
        /// </summary>
        public ResourceCertificateAndAADDetails() { }

        /// <summary>
        /// Initializes a new instance of the ResourceCertificateAndAADDetails
        /// class.
        /// </summary>
        /// <param name="certificate">The base64 encoded certificate raw data
        /// string.</param>
        /// <param name="resourceId">Resource ID of the vault.</param>
        /// <param name="aadAuthority">AAD tenant authority.</param>
        /// <param name="aadTenantId">AAD tenant Id.</param>
        /// <param name="servicePrincipalClientId">AAD service principal
        /// clientId.</param>
        /// <param name="servicePrincipalObjectId">AAD service principal
        /// ObjectId.</param>
        /// <param name="azureManagementEndpointAudience">Azure Management
        /// Endpoint Audience.</param>
        /// <param name="subject">Certificate Subject Name.</param>
        /// <param name="validFrom">Certificate Validity start Date
        /// time.</param>
        /// <param name="validTo">Certificate Validity End Date time.</param>
        /// <param name="thumbprint">Certificate thumbrprint.</param>
        /// <param name="friendlyName">Certificate friendlyname.</param>
        /// <param name="issuer">Certificate issuer.</param>
        public ResourceCertificateAndAADDetails(string certificate = default(string), long? resourceId = default(long?), string aadAuthority = default(string), string aadTenantId = default(string), string servicePrincipalClientId = default(string), string servicePrincipalObjectId = default(string), string azureManagementEndpointAudience = default(string), string subject = default(string), System.DateTime? validFrom = default(System.DateTime?), System.DateTime? validTo = default(System.DateTime?), string thumbprint = default(string), string friendlyName = default(string), string issuer = default(string))
        {
            Certificate = certificate;
            ResourceId = resourceId;
            AadAuthority = aadAuthority;
            AadTenantId = aadTenantId;
            ServicePrincipalClientId = servicePrincipalClientId;
            ServicePrincipalObjectId = servicePrincipalObjectId;
            AzureManagementEndpointAudience = azureManagementEndpointAudience;
            Subject = subject;
            ValidFrom = validFrom;
            ValidTo = validTo;
            Thumbprint = thumbprint;
            FriendlyName = friendlyName;
            Issuer = issuer;
        }

        /// <summary>
        /// Gets or sets the base64 encoded certificate raw data string.
        /// </summary>
        [JsonProperty(PropertyName = "certificate")]
        public string Certificate { get; set; }

        /// <summary>
        /// Gets or sets resource ID of the vault.
        /// </summary>
        [JsonProperty(PropertyName = "resourceId")]
        public long? ResourceId { get; set; }

        /// <summary>
        /// Gets or sets AAD tenant authority.
        /// </summary>
        [JsonProperty(PropertyName = "aadAuthority")]
        public string AadAuthority { get; set; }

        /// <summary>
        /// Gets or sets AAD tenant Id.
        /// </summary>
        [JsonProperty(PropertyName = "aadTenantId")]
        public string AadTenantId { get; set; }

        /// <summary>
        /// Gets or sets AAD service principal clientId.
        /// </summary>
        [JsonProperty(PropertyName = "servicePrincipalClientId")]
        public string ServicePrincipalClientId { get; set; }

        /// <summary>
        /// Gets or sets AAD service principal ObjectId.
        /// </summary>
        [JsonProperty(PropertyName = "servicePrincipalObjectId")]
        public string ServicePrincipalObjectId { get; set; }

        /// <summary>
        /// Gets or sets azure Management Endpoint Audience.
        /// </summary>
        [JsonProperty(PropertyName = "azureManagementEndpointAudience")]
        public string AzureManagementEndpointAudience { get; set; }

        /// <summary>
        /// Gets or sets certificate Subject Name.
        /// </summary>
        [JsonProperty(PropertyName = "subject")]
        public string Subject { get; set; }

        /// <summary>
        /// Gets or sets certificate Validity start Date time.
        /// </summary>
        [JsonProperty(PropertyName = "validFrom")]
        public System.DateTime? ValidFrom { get; set; }

        /// <summary>
        /// Gets or sets certificate Validity End Date time.
        /// </summary>
        [JsonProperty(PropertyName = "validTo")]
        public System.DateTime? ValidTo { get; set; }

        /// <summary>
        /// Gets or sets certificate thumbrprint.
        /// </summary>
        [JsonProperty(PropertyName = "thumbprint")]
        public string Thumbprint { get; set; }

        /// <summary>
        /// Gets or sets certificate friendlyname.
        /// </summary>
        [JsonProperty(PropertyName = "friendlyName")]
        public string FriendlyName { get; set; }

        /// <summary>
        /// Gets or sets certificate issuer.
        /// </summary>
        [JsonProperty(PropertyName = "issuer")]
        public string Issuer { get; set; }

    }
}

